// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fir_HH_
#define _fir_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct fir : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > y;
    sc_out< sc_logic > y_ap_vld;
    sc_in< sc_lv<32> > x;


    // Module declarations
    fir(sc_module_name name);
    SC_HAS_PROCESS(fir);

    ~fir();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > shift_reg_9;
    sc_signal< sc_lv<32> > shift_reg_8;
    sc_signal< sc_lv<32> > shift_reg_7;
    sc_signal< sc_lv<32> > shift_reg_6;
    sc_signal< sc_lv<32> > shift_reg_5;
    sc_signal< sc_lv<32> > shift_reg_4;
    sc_signal< sc_lv<32> > shift_reg_3;
    sc_signal< sc_lv<32> > shift_reg_2;
    sc_signal< sc_lv<32> > shift_reg_1;
    sc_signal< sc_lv<32> > shift_reg_0;
    sc_signal< sc_lv<32> > shift_reg_4_load_reg_225;
    sc_signal< sc_lv<32> > tmp_4_5_fu_59_p2;
    sc_signal< sc_lv<32> > tmp_4_5_reg_230;
    sc_signal< sc_lv<32> > tmp_4_6_fu_75_p2;
    sc_signal< sc_lv<32> > tmp_4_6_reg_235;
    sc_signal< sc_lv<32> > tmp_4_8_fu_101_p2;
    sc_signal< sc_lv<32> > tmp_4_8_reg_240;
    sc_signal< sc_lv<32> > tmp_6_fu_117_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_245;
    sc_signal< sc_lv<32> > tmp_4_fu_133_p2;
    sc_signal< sc_lv<32> > tmp_4_reg_250;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > tmp_4_2_fu_159_p2;
    sc_signal< sc_lv<32> > tmp_4_2_reg_255;
    sc_signal< sc_lv<32> > tmp_4_4_fu_185_p2;
    sc_signal< sc_lv<32> > tmp_4_4_reg_260;
    sc_signal< sc_lv<32> > tmp2_fu_204_p2;
    sc_signal< sc_lv<32> > tmp2_reg_265;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > tmp_4_5_fu_59_p0;
    sc_signal< sc_lv<32> > tmp_4_6_fu_75_p0;
    sc_signal< sc_lv<32> > tmp_4_8_fu_101_p0;
    sc_signal< sc_lv<32> > tmp_6_fu_117_p0;
    sc_signal< sc_lv<32> > tmp_4_fu_133_p0;
    sc_signal< sc_lv<32> > tmp_4_2_fu_159_p0;
    sc_signal< sc_lv<32> > tmp_4_4_fu_185_p0;
    sc_signal< sc_lv<32> > tmp4_fu_200_p2;
    sc_signal< sc_lv<32> > tmp3_fu_196_p2;
    sc_signal< sc_lv<32> > tmp1_fu_210_p2;
    sc_signal< sc_lv<32> > tmp_fu_214_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1F4;
    static const sc_lv<32> ap_const_lv32_139;
    static const sc_lv<32> ap_const_lv32_FFFFFFA5;
    static const sc_lv<32> ap_const_lv32_35;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_tmp1_fu_210_p2();
    void thread_tmp2_fu_204_p2();
    void thread_tmp3_fu_196_p2();
    void thread_tmp4_fu_200_p2();
    void thread_tmp_4_2_fu_159_p0();
    void thread_tmp_4_2_fu_159_p2();
    void thread_tmp_4_4_fu_185_p0();
    void thread_tmp_4_4_fu_185_p2();
    void thread_tmp_4_5_fu_59_p0();
    void thread_tmp_4_5_fu_59_p2();
    void thread_tmp_4_6_fu_75_p0();
    void thread_tmp_4_6_fu_75_p2();
    void thread_tmp_4_8_fu_101_p0();
    void thread_tmp_4_8_fu_101_p2();
    void thread_tmp_4_fu_133_p0();
    void thread_tmp_4_fu_133_p2();
    void thread_tmp_6_fu_117_p0();
    void thread_tmp_6_fu_117_p2();
    void thread_tmp_fu_214_p2();
    void thread_y();
    void thread_y_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
